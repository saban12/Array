let fruits = ['Apple', 'Banana']

let pos = fruits.indexOf('Banana')
console.log(pos) // 1  -return the position of the item



////Remove an item by index position
let fruits = ['Apple', 'Banana' , 'grape']

let removedItem = fruits.splice(1 , 1) // (item position , number of items) if item num is blank, delete all the position item and all that follow 

console.log(fruits) // [ 'Apple', 'grape' ]
console.log(removedItem) // [ 'Banana' ]



////look for objects in array
//Syntax--
//indexOf(searchElement)
//indexOf(searchElement, fromIndex)
const beasts = ['ant', 'bison', 'camel', 'duck', 'bison'];

console.log(beasts.indexOf('bison')); // expected output: 1

// looking for "bison" start from index 2 (loop over the array)
console.log(beasts.indexOf('bison', 2)); // expected output: 4 (loop over the array)

console.log(beasts.indexOf('giraffe')); // expected output: -1 (not found)



/////Index of first occurrences
const str = 'Brave new world'

console.log('Index of first w from start is ' + str.indexOf('w'))   // logs 8
console.log('Index of "new" from start is ' + str.indexOf('new'))   // logs 6

//
const paragraph = 'The quick brown fox jumps over the lazy dog. If the dog barked, was it really lazy?';

const searchTerm = 'dog';
const indexOfFirst = paragraph.indexOf(searchTerm);

console.log(`The index of the first "${searchTerm}" from the beginning is ${indexOfFirst}`); // expected output: "The index of the first "dog" from the beginning is 40"


console.log(`The index of the 2nd "${searchTerm}" is ${paragraph.indexOf(searchTerm, (indexOfFirst + 1))}`); // expected output: "The index of the 2nd "dog" is 52"



////search element in an array and return the position of all occurrences of an element
////the indexOf(searchValue, fromIndex) search start from a given position
////the idx variable use in the while loop as an ascending operator
var indices = [];
var array = ['a', 'b', 'a', 'c', 'a', 'd'];
var element = 'a';
var idx = 0;

while (idx != -1) {
  indices.push(idx);
  idx = array.indexOf(element, idx + 1); //indexOf(searchValue, fromIndex)
}
console.log(indices); // [0, 2, 4]

console.log(idx);




////search element in an array and return the number of occurrences
const str = 'To be, or not to be, that is the question.'
let count = 0
let position = str.indexOf('e') // starts from the first occurrences so it wont get counted twice

while (position !== -1) {
  count++
                       //(element, position to look from)
  position = str.indexOf('e', position + 1)
}

console.log(count)  // displays 4




////Finding if an element exists in the array or not and updating the array                              
function updateVegetablesCollection (array, itemToCheck) { 
    if (array.indexOf(itemToCheck) === -1) {
        array.push(itemToCheck);
        console.log('New veggies collection is : ' + array);
    } else if (array.indexOf(itemToCheck) > -1) {
        console.log(itemToCheck + ' already exists in the veggies collection.');
    }
}

var veggies = ['potato', 'tomato', 'chillies', 'green-pepper'];

updateVegetablesCollection(veggies, 'spinach'); // New veggies collection is : potato,tomato,chillies,green-pepper,spinach
updateVegetablesCollection(veggies, 'spinach');// spinach already exists in the veggies collection.



////copy
let array1 = [1, 2, 3, 4, 5] // copy the array 2 places from the end
               //(target)
array1.copyWithin(-2)                             // [1, 2, 3, 1, 2]


let array2 = [1, 2, 3, 4, 5]
               //(target, start copy)
array2.copyWithin(0, 3)                          // [4, 5, 3, 4, 5]


let array3 = [1, 2, 3, 4, 5]
                 //(target, start, end)
array3.copyWithin(0, 3, 4)                       // [4, 2, 3, 4, 5]


let array4 = [1, 2, 3, 4, 5]
array4.copyWithin(-2, -3, -1)                    // [1, 2, 3, 3, 4]


